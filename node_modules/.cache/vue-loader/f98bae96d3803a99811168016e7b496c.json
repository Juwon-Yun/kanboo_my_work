{"remainingRequest":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/src/components/component/acess/projectDetail/gitAndIssue/Git.vue?vue&type=style&index=0&id=db85d398&lang=css","dependencies":[{"path":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/src/components/component/acess/projectDetail/gitAndIssue/Git.vue","mtime":1638318011138},{"path":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/node_modules/css-loader/dist/cjs.js","mtime":1638271752453},{"path":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1638271777105},{"path":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/node_modules/postcss-loader/src/index.js","mtime":1638271755644},{"path":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/node_modules/cache-loader/dist/cjs.js","mtime":1638271738388},{"path":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/node_modules/vue-loader-v16/dist/index.js","mtime":1638271756076}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ub2RlVHJlZXsKICAgIGhlaWdodDogMjB2aDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzJGM0I7CiAgICBvdmVyZmxvdzogc2Nyb2xsOwogICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAvKiBJRSBhbmQgRWRnZSAqLwogICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyAvKiBGaXJlZm94ICovCn0KLm5vZGVUcmVlOjotd2Via2l0LXNjcm9sbGJhciB7CiAgICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEqLwp9Ci8qIC5ub2RlVHJlZTpob3ZlcnsKICAgIGhlaWdodDogNDB2aDsKfSAqLwoucmVwb0NvbnRlbnR7CiAgICBjb2xvcjogI2VlZTsKfQp1bCB7CiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7Cn0KbGl7CiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0K"},{"version":3,"sources":["/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/src/components/component/acess/projectDetail/gitAndIssue/Git.vue"],"names":[],"mappings":";AAyIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACvC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB,EAAE,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,EAAE;IACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB;AACA,CAAC,CAAC;IACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB","file":"/mnt/c/Users/GJW/Desktop/vue3/final_project/kanboo_my_work-master - 복사본/src/components/component/acess/projectDetail/gitAndIssue/Git.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"Repo\">\n        <h1>GitHub Repository</h1>\n        <div class=\"nodeTree\">\n            <h1>Repository List</h1>\n            <br>\n            <div class=\"repoContent\">\n                <span  @click.stop=\"getFilesByRepo($event,index)\" v-for=\"a,index in $store.state.git.gitrepo \" :key=\"index\" :id=\"`btn${index}`\">\n                    {{a.name}}<br>\n                </span>\n            </div>\n        </div>\n    </div>\n</template>\n \n<script>\nimport { mapMutations } from 'vuex'\nimport { mapActions } from 'vuex'\nimport axios from 'axios' // eslint-disable-line no-unused-vars\n\nconst key = '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';\n\nexport default {\n    data() {\n        return {\n        }\n    },\n    methods: {\n        ...mapMutations({\n            selectRepo : 'git/selectRepo',\n            sendFileContent : 'git/sendFileContent',\n\n        }),\n        ...mapActions({\n            getRepoList : 'git/getRepoList',\n        }),\n        axiosClick() {\n            // this.$store.dispatch('getRepoList')\n        //    console.log(this.$store.state.git.gitrepo)\n            // $store.state.git.commit('selectRepo')\n            // console.log(this.$store.state.git.commit('selectRepo'))\n            // this.selectRepo()\n            // console.log(this.selectRepo())\n        },\n        getFilesByRepo(e,index){\n        // getFilesByRepo(e){\n            // e.target(e의 객체 자체를 의미함) => 이벤트 발생을 시키는 객체\n            // console.log(e.target.innerText)\n            // console.log(index)\n            e.stopPropagation();\n\n            let target = document.getElementById(`btn${index}`)// eslint-disable-line no-unused-vars\n            // e.target과 btn${index} 가 다르면 return \n            if(e.target !== target) return\n\n            this.axios.get(`https://api.github.com/repos/Juwon-Yun/${e.target.innerText}/contents`, {key})\n            .then((result) => {\n                // let code = `<ul>`\n                console.log(result)\n                result.data.forEach(element => {\n                    console.log(element);\n                    let ul = document.createElement('ul'); // eslint-disable-line no-unused-vars\n                    let li = document.createElement('li');\n\n                    // if(element.type === 'dir'){\n                    li.innerHTML = `${element.name}`;\n                    // }else if(element.type === 'file'){\n                    //     li.innerHTML = `${element.name}+${element.type}`;\n                    // } \n                    // console.log('this => ',this.sendFileContent)\n                    li.setAttribute('data-repoName', element.name);\n\n                    li.addEventListener('click', this.sendFileContent(element.name));\n\n                    e.target.appendChild(ul);\n                    ul.appendChild(li);\n                });\n\n                // for(let i = 0; i < result.data.length; i++){\n                //     if(result.data[i].type === 'dir'){\n                //         li.innerHTML = `${result.data[i].name} ! dir !`\n                //     }else if(result.data[i].type === 'file'){\n                //         // li.innerHTML = '';\n                //         li.innerHTML = `${result.data[i].name} ! file !`;\n                //     }\n                //         // bind => 함수의 포인터를 만들어서 반환한다.\n                //         // li.addEventListener('click', this.sendFileContent.bind(this, element.name));\n                // }\n                // result.data.forEach( (element) => {\n\n                    // if(!document.querySelector('.repoContent').hasChildNodes){\n                    //     // document.querySelector('.repoContent').children.removeAttribute('click');\n                    //     code += `<li>하위 파일 및 폴더가 존재하지 않습니다.</li>`;\n                    //     code += `</ul>`\n                    //      e.target.innerHTML += code\n                    //     console.log('return함')\n                    //     return\n                    // }\n\n                   \n                // });\n            }).catch((err) => {\n                console.log(err)\n            });\n\n        },\n\n        sendFileContent(p_fileName){\n            console.log('p_name =>  ',p_fileName)\n\n            // for(const key in p_fileName){\n            //     console.log(`${key} : ${p_fileName[key]}`)\n            // }\n\n            this.selectRepo(p_fileName)\n        },\n        isDir(){\n\n        }\n    },\n    created() {\n        // mapActions([\n        //     this.$store.state.git.dispatch('getRepoList')\n        // ]),\n        // console.log(this.$store.state.git.mapActions)\n        // console.log(this.getRepoList());\n        this.getRepoList();\n        // this.$store.modules.git.dispatch('getRepoList')\n    },\n    actions:{\n        \n    },\n}\n\n</script>\n \n<style>\n.nodeTree{\n    height: 20vh;\n    background-color: #2C2F3B;\n    overflow: scroll;\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n}\n.nodeTree::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera*/\n}\n/* .nodeTree:hover{\n    height: 40vh;\n} */\n.repoContent{\n    color: #eee;\n}\nul {\n    padding-left: 20px;\n}\nli{\n    padding-left: 20px;\n    text-decoration: none;\n}\n</style>"]}]}